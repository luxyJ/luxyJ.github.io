<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>luyaJ的小博客</title>
  <subtitle>talk is cheap,show me the code</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-23T14:29:07.731Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>luyaJ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JSP学习笔记</title>
    <link href="http://yoursite.com/2017/07/23/JSP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/07/23/JSP学习笔记/</id>
    <published>2017-07-23T14:19:34.000Z</published>
    <updated>2017-07-23T14:29:07.731Z</updated>
    
    <content type="html"><![CDATA[<p>JSP – Java Server Pages</p>
<a id="more"></a>
<h3 id="区别jsp和servlet"><a href="#区别jsp和servlet" class="headerlink" title="区别jsp和servlet"></a>区别jsp和servlet</h3><p>1.jsp就是在html里面写java代码，servlet就是在java里面写html代码。</p>
<p>2.servlet在java代码中通过HttpServletResponse对象动态输出HTML内容；jsp在静态HTML内容中嵌入Java代码，Java代码被动态执行后生成HTML内容。</p>
<p>3.两者通过MVC双剑合璧：MVC(Model-View-Controller)</p>
<ul>
<li>Controller(控制器) -负责转发请求，对请求进行处理</li>
<li>View(视图) -负责界面显示</li>
<li>Model(模型) -业务功能编写（例如算法实现）、数据库设计以及数据存取操作实现</li>
</ul>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>myeclipse,tomcat</p>
<h3 id="使用myeclipse"><a href="#使用myeclipse" class="headerlink" title="使用myeclipse"></a>使用myeclipse</h3><p>1.new – web project;</p>
<p>2.输入project name (imoocjsp);</p>
<p>3.打开imoocjsp 下的 Webroot 文件，双击index.jsp。删除<code>pageEncoding=&quot;ISO-8859-1&quot;</code>之后 使用 <code>alt+/</code> 选择<code>contentType</code>,将其中charset值改为<code>charset=utf-8</code>;(解决中文编码问题)</p>
<p>4.点击图中红色区域内图标，选择Project – imoocjsp – add – Server – tomcat7 –ok;</p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/eclipse1.PNG" alt=""></p>
<p>5.启动Tomcat服务器，在地址栏输入：localhost:8080/imoocjsp/index.jsp</p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/eclipse2.PNG" alt=""></p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/eclipse3.PNG" alt=""></p>
<h3 id="JSP指令"><a href="#JSP指令" class="headerlink" title="JSP指令"></a>JSP指令</h3><p>用来设置与整个JSP页面相关的属性。<br>语法：<code>&lt;%@ directive attribute=&quot;value&quot; %&gt;</code></p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/instruct.PNG" alt=""></p>
<ul>
<li>include<ul>
<li>指令: <code>&lt;%@ include file=&quot;url&quot; %&gt;</code></li>
<li>动作：<code>&lt;jsp:include page=&quot;url&quot; flush=&quot;true|false&quot; /&gt;</code> </li>
</ul>
</li>
<li>page(要包含的页面)；</li>
<li>flush(被包含的页面是否从缓冲区读取)</li>
</ul>
<h3 id="JSP注释"><a href="#JSP注释" class="headerlink" title="JSP注释"></a>JSP注释</h3><ul>
<li>HTML注释： <!-- html注释 -->  //客户端可见</li>
<li>JSP注释： &lt;%– html注释 –%&gt;  //客户端不可见</li>
<li>JSP脚本注释： //单行注释  / ** /多行注释</li>
</ul>
<h3 id="JSP脚本"><a href="#JSP脚本" class="headerlink" title="JSP脚本"></a>JSP脚本</h3><p>写在<code>&lt;% %&gt;</code> 中的叫做JSP脚本。</p>
<pre><code>&lt;%
out.println(&quot;大家好，JSP脚本&quot;);
%&gt;
</code></pre><h3 id="JSP声明"><a href="#JSP声明" class="headerlink" title="JSP声明"></a>JSP声明</h3><p>在JSP页面中定义变量或者方法。<br>语法：<code>&lt;%! JAVA代码 %&gt;</code></p>
<pre><code>&lt;%!
String s=&quot;张三&quot;; //声明了一个字符串变量
int add(int a,int b){  //声明了一个返回整型函数，实现两个整数的求和
    return a+b;
}
%&gt;
</code></pre><h3 id="JSP表达式"><a href="#JSP表达式" class="headerlink" title="JSP表达式"></a>JSP表达式</h3><p>语法：<code>&lt;%=表达式 %&gt;</code><br>注意：表达式不以分号结束</p>
<h3 id="做一个九九乘法表"><a href="#做一个九九乘法表" class="headerlink" title="做一个九九乘法表"></a>做一个九九乘法表</h3><pre><code>&lt;%!
String printMultiTable() {
String s=&quot;&quot;;
for(int i=1;i&lt;=9;i++) {
for(int j=1;j&lt;=i;j++) {
    s+=i+&quot;*&quot;+j+&quot;=&quot;+(i*j)+&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;;
    }
    s+=&quot;&lt;br&gt;&quot;;
}
return s;
}
%&gt;
&lt;h1&gt;九九乘法表&lt;/h1&gt;&lt;br&gt;
&lt;%=printMultiTable() %&gt;
</code></pre><h3 id="JSP内置对象"><a href="#JSP内置对象" class="headerlink" title="JSP内置对象"></a>JSP内置对象</h3><h4 id="out对象"><a href="#out对象" class="headerlink" title="out对象"></a>out对象</h4><ul>
<li>什么事缓冲区？</li>
</ul>
<p>Buffer,所谓缓冲区就是内存的一块区域来保存临时数据。</p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/out%E5%AF%B9%E8%B1%A1.PNG" alt=""></p>
<pre><code>&lt;%
out.println(&quot;&lt;h2&gt;静夜思&lt;/h2&gt;&quot;);
out.println(&quot;床前明月光&lt;br&gt;&quot;);
out.clear();
out.println(&quot;疑是地上霜&lt;br&gt;&quot;);
%&gt;
缓冲区大小：&lt;%=out.getBufferSize() %&gt;Byte&lt;br&gt;
缓冲区剩余大小：&lt;%=out.getRemaining() %&gt;&lt;br&gt;
缓冲区满时：&lt;%=out.isAutoFlush() %&gt;&lt;br&gt;
</code></pre><h4 id="get-post"><a href="#get-post" class="headerlink" title="get/post"></a>get/post</h4><p>method=”get/post”</p>
<ul>
<li><code>get</code>: 提交的数据最多不超过2KB，安全性较低但效率比post高。适合提交数据量不大。安全性不高的数据。比如：搜索、查询等功能。</li>
<li><p><code>post</code>: 将用户提交的信息封装在HTML HEADER内。适合提交数据量大，安全性高的用户信息。比如：注册、修改、上传等功能。</p>
  <form action="dologin.jsp" method="post"><br>      用户名:<input type="text" name="username"><br><br>      密码:<input type="password" name="password"><br><br>      <input type="submit" value="登录"><br>  </form>

</li>
</ul>
<h4 id="request-response"><a href="#request-response" class="headerlink" title="request/response"></a>request/response</h4><p><img src="http://ot4r4qnml.bkt.clouddn.com/request.PNG" alt=""></p>
<pre><code>//login.jsp:
&lt;form action=&quot;request.jsp&quot; method=&quot;post&quot;&gt;
    用户名:&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br&gt;
    爱好:&lt;input type=&quot;checkbox&quot; name=&quot;favorite&quot; value=&quot;read&quot;&gt;读书
    &lt;input type=&quot;checkbox&quot; name=&quot;favorite&quot; value=&quot;music&quot;&gt;音乐
    &lt;input type=&quot;checkbox&quot; name=&quot;favorite&quot; value=&quot;movie&quot;&gt;电影
    &lt;input type=&quot;checkbox&quot; name=&quot;favorite&quot; value=&quot;internet&quot;&gt;上网
    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;
&lt;/form&gt;
&lt;a href=&quot;request.jsp?username=lisi&quot;&gt;测试URL传参数&lt;/a&gt;

//request.jsp:
&lt;%
request.setCharacterEncoding(&quot;utf-8&quot;); //解决中文乱码问题
%&gt;
用户：&lt;%=request.getParameter(&quot;username&quot;) %&gt;&lt;br/&gt;
爱好：&lt;%
    if(request.getParameterValues(&quot;favorite&quot;)!=null){
        String[] favorites=request.getParameterValues(&quot;favorite&quot;);
        for(int i=0;i&lt;favorites.length;i++){
            out.println(favorites[i]+&quot;&amp;nbsp;&amp;nbsp;&quot;);
         }
    }
    %&gt;
%&gt;
</code></pre><h4 id="session"><a href="#session" class="headerlink" title="session"></a>session</h4><h4 id="application"><a href="#application" class="headerlink" title="application"></a>application</h4><h4 id="page对象"><a href="#page对象" class="headerlink" title="page对象"></a>page对象</h4><h3 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h3><p>javabean是一种规范，而不是一种技术或工具。</p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/javabean.PNG" alt=""></p>
<h4 id="创建JavaBean"><a href="#创建JavaBean" class="headerlink" title="创建JavaBean"></a>创建JavaBean</h4><ol>
<li>新建一个Web Project –命名：JavaBeanDemo1 ；</li>
<li>新建一个package –命名：com.po ；</li>
<li>新建一个class –命名：Users ；</li>
<li><img src="http://ot4r4qnml.bkt.clouddn.com/JavaBeanDemo1-1.PNG" alt=""></li>
<li>右键 – <code>source</code> – <code>Generate getters and setters</code> – <code>Select All</code> –ok ；</li>
<li>双击index.jsp – 使用page指令 <code>&lt;%@ page import=&quot;com.po.Users&quot; %&gt;</code></li>
<li> <code>&lt;%
 Users user = new Users();
 user.setUsername(&quot;admin&quot;); //设置用户名
 user.setPassword(&quot;123456&quot;); //设置密码
 %&gt;
 用户名：&lt;%=user.getUsername() %&gt;&lt;br&gt;
 密码：&lt;%=user.getPassword() %&gt;&lt;br&gt;</code></li>
</ol>
<h4 id="JavaBean动作元素"><a href="#JavaBean动作元素" class="headerlink" title="JavaBean动作元素"></a>JavaBean动作元素</h4><ul>
<li><code>&lt;jsp:useBean id=&quot;myUsers&quot; class=&quot;com.po.Users&quot; scope=&quot;page&quot; /&gt;</code></li>
<li><code>&lt;jsp:setProperty name=&quot;myUsers&quot; property=&quot; * &quot;/&gt;</code></li>
<li><code>&lt;jsp:getProperty name=&quot;myUsers&quot; property=&quot; * &quot;/&gt;</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JSP – Java Server Pages&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaWeb" scheme="http://yoursite.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>git学习笔记</title>
    <link href="http://yoursite.com/2017/07/22/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/07/22/git学习笔记/</id>
    <published>2017-07-22T02:52:20.000Z</published>
    <updated>2017-07-22T02:59:22.412Z</updated>
    
    <content type="html"><![CDATA[<p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p>
<a id="more"></a>
<h2 id="创建版本库-repository"><a href="#创建版本库-repository" class="headerlink" title="创建版本库(repository)"></a>创建版本库(repository)</h2><p>首先在合适的地方(我选择在github/Git/usr中)，创建一个空目录：</p>
<pre><code>$ mkdir learngit
$ cd learngit
$ pwd
/usr/learngit
</code></pre><p><code>pwd</code>命令用于显示当前目录</p>
<p>第二步，<strong><em>初始化仓库</em></strong>，在<code>Git/usr</code>中，输入命令 <code>git  init</code>, 这样瞬间Git就把仓库建好了，而且会告诉你是一个空的仓库，此时你会看到多了一个<code>.git</code>目录</p>
<p>如果你没有看到，那是因为这个目录被隐藏了，用<code>ls -ah</code>命令就可以看到。</p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/gitinit.PNG" alt="git init命令"></p>
<h2 id="把文件添加到版本库"><a href="#把文件添加到版本库" class="headerlink" title="把文件添加到版本库"></a>把文件添加到版本库</h2><p>先编写一个<code>readme.txt</code> 文件，内容如下</p>
<pre><code>Git is a version control system.
Git is free software.
</code></pre><p>第一步，把文件添加到仓库</p>
<pre><code>$ git add readme.txt
</code></pre><p>第二步，把文件提交到仓库</p>
<pre><code>$ git commit -m &quot;add readme.txt&quot;
</code></pre><h3 id="修改readme-txt文件"><a href="#修改readme-txt文件" class="headerlink" title="修改readme.txt文件"></a>修改readme.txt文件</h3><p>接着上面的内容，继续修改readme.txt文件，改成一下内容：</p>
<pre><code>Git is a distributed version control system.
Git is free software.
</code></pre><p>掌握仓库当前的状态：</p>
<pre><code>$ git status
</code></pre><p><img src="http://ot4r4qnml.bkt.clouddn.com/gitstatus.PNG" alt=""></p>
<p>上图告诉我们，readme.txt被修改过,但还没有准备提交的修改</p>
<p>如果说过了很久，你忘了自己修改了什么内容，那么使用下面的命令就可以知道了：</p>
<pre><code>$ git diff &quot;文件名&quot;
</code></pre><p>接下来使用之前的 <code>git add readme.txt</code> ,  <code>git commit -m &quot;add distributed&quot;</code></p>
<h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><p>1.查看修改的历史记录(显示是从近到远)：</p>
<pre><code>$ git log
</code></pre><p><img src="http://ot4r4qnml.bkt.clouddn.com/gitlog.png" alt=""></p>
<p>也可以加上参数 <code>--pretty=oneline</code>让历史记录看起来更简单。</p>
<p>2.退回上一个版本：</p>
<pre><code>$ git reset --hard HEAD^
</code></pre><p><img src="http://ot4r4qnml.bkt.clouddn.com/gitreset.png" alt=""></p>
<p>3.可是这个时候又想回到之前的版本怎么办，别急，只要你的命令行窗口没关掉，就往上找到<code>append GPL</code> 的 <code>commit id</code>是 <code>ee0a0cff...</code>(版本号只要前几位就行，git会自动查找)</p>
<pre><code>$ git reset --hard ee0a0cff
</code></pre><p>那要是命令行窗口关掉了呢？不怕，还是有办法的！Git提供了一个命令 <code>git reflog</code> 用来记录你的每一次命令。</p>
<h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><pre><code>$ git rm readme.txt
</code></pre><h2 id="上传到github完整过程-–添加远程库"><a href="#上传到github完整过程-–添加远程库" class="headerlink" title="上传到github完整过程 –添加远程库"></a>上传到github完整过程 –添加远程库</h2><pre><code>echo &quot;#DemoWebsite&quot; &gt;&gt; README.md
git init
git add README.md
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/luyaJ/DemoWebsite.git
git push -u origin master
</code></pre><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><h3 id="创建others分支，并切换到others分支"><a href="#创建others分支，并切换到others分支" class="headerlink" title="创建others分支，并切换到others分支"></a>创建<code>others</code>分支，并切换到<code>others</code>分支</h3><pre><code>$ git checkout -b others
</code></pre><p>相当于下面的命令：</p>
<pre><code>$ git branch others
$ git checkout others
</code></pre><h3 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h3><pre><code>$ git branch
</code></pre><h3 id="切换回master分支"><a href="#切换回master分支" class="headerlink" title="切换回master分支"></a>切换回<code>master</code>分支</h3><pre><code>$ git checkout master
</code></pre><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><pre><code>$ git merge others
</code></pre><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p>分支用完合并后就可以随意删除了：</p>
<pre><code>$ git branch -d others
</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>创建空目录三步走：<code>mkdir 目录名字</code> ， <code>cd 目录名字</code> ， <code>pwd</code></li>
<li>初始化仓库：<code>git init</code></li>
<li>添加文件到仓库：<code>git add 文件名</code> </li>
<li><p>提交文件到仓库：<code>git commit -m “XXXX”</code><br>(注意每次修改，如果不<code>add</code>到暂存区，那就不会加入到 <code>commit</code>中)</p>
</li>
<li><p>掌握仓库当前的状态：<code>git status</code></p>
</li>
<li>查看文件修改内容： <code>git diff “文件名”</code></li>
<li>查看修改的历史记录: <code>git log</code></li>
<li>删除文件：<code>git rm 文件名</code></li>
</ol>
<p>最后附上<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰老师的Git教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>用css实现几个小图标</title>
    <link href="http://yoursite.com/2017/07/21/%E7%94%A8css%E5%AE%9E%E7%8E%B0%E5%87%A0%E4%B8%AA%E5%B0%8F%E5%9B%BE%E6%A0%87/"/>
    <id>http://yoursite.com/2017/07/21/用css实现几个小图标/</id>
    <published>2017-07-21T05:25:59.000Z</published>
    <updated>2017-07-21T10:00:22.548Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-三角形"><a href="#1-三角形" class="headerlink" title="1. 三角形"></a>1. 三角形</h3><a id="more"></a>
<p>设置一个块元素大小为0，采用<code>border</code>属性，制作如下各种图形：</p>
<pre><code>//1.双色正方形
height: 0;
width: 0;
border-bottom: 100px solid indianred;
border-left: 100px solid chocolate;
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/zfx.png" alt="双色正方形"></p>
<pre><code>//2.三色矩形
border-right: 100px solid darkcyan;
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/jx.png" alt="三色矩形"></p>
<pre><code>//3.四色正方形
border-top: 100px solid plum;
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/zfx1.png" alt="四色正方形"></p>
<pre><code>//4.三角形
height: 0;
width: 0;
border-bottom: 100px solid indianred;
border-left: 100px solid transparent;
border-right: 100px solid transparent;
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/sjx.png" alt="三角形"></p>
<h3 id="2-陌陌轮廓"><a href="#2-陌陌轮廓" class="headerlink" title="2.陌陌轮廓"></a>2.陌陌轮廓</h3><p>使用圆角属性制作~直接上代码</p>
<pre><code>height: 100px;
width: 100px;
background: darkgoldenrod;
border-radius: 50% 50% 0;
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/momo.png" alt="momo"></p>
<p>进一步拓展，制作成小水滴：</p>
<pre><code>height: 100px;
width: 100px;
background: sandybrown;
border-radius: 50% 50% 0;
transform: rotate(45deg);
</code></pre><h3 id="3-扭曲的正方形"><a href="#3-扭曲的正方形" class="headerlink" title="3.扭曲的正方形"></a>3.扭曲的正方形</h3><pre><code>height: 100px;
width: 100px;
background: mediumslateblue;
border-radius: 20px 12px 40px / 0.5em 3em;
</code></pre><p>其中的<code>border-radius: 2em 1em 4em / 0.5em 3em;</code>等价于：</p>
<pre><code>border-top-left-radius: 2em 0.5em;
border-top-right-radius: 1em 3em;
border-bottom-right-radius: 4em 0.5em;
border-bottom-left-radius: 1em 3em;
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/zgx2.png" alt="扭曲的正方形"></p>
<p><strong><em>注释:</em></strong> 如果省略 bottom-left，则与 top-right 相同。如果省略 bottom-right，则与 top-left 相同。如果省略 top-right，则与 top-left 相同。</p>
<h3 id="4-箭头"><a href="#4-箭头" class="headerlink" title="4.箭头"></a>4.箭头</h3><pre><code>.demo{
    width: 0;
    height: 0;
    border-top: 15px solid transparent;
    border-right: 15px solid red;
    -webkit-transform: rotate(10deg);
    -o-transform: rotate(10deg);
    -moz-transform: rotate(10deg);
    -ms-transform: rotate(10deg);
}
.demo:after{
    content: &quot;&quot;;
    position: absolute;
    border-top: 5px solid red;
    border-radius: 20px 0 0 0;
    top: -18px;
    left: -10px;
    width: 15px;
    height: 15px;
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -o-transform: rotate(45deg);
}
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/arrow.png" alt="arrow"></p>
<h3 id="5-小星星"><a href="#5-小星星" class="headerlink" title="5.小星星"></a>5.小星星</h3><p>思想：三个三角形拼接而成，使用<code>transform</code>调整方向。</p>
<pre><code>.star{
    margin: 100px 0;
    color: red;
    height: 0;
    width: 0;
    border-right: 100px solid transparent;
    border-bottom: 70px solid darkkhaki;
    border-left: 100px solid transparent;
    -webkit-transform: rotate(35deg);
    -o-transform: rotate(35deg);
    -moz-transform: rotate(35deg);
    -ms-transform: rotate(35deg);
}
.star:before{
    content: &apos;&apos;;
    height: 0;
    width: 0;
    border-bottom: 80px solid darkkhaki;
    border-left: 30px solid transparent;
    border-right: 30px solid transparent;
    position: absolute;
    top: -56px;
    left: -77px;
    -webkit-transform: rotate(-35deg);
    -moz-transform: rotate(-35deg);
    -ms-transform: rotate(-35deg);
    -o-transform: rotate(-35deg);
}
.star:after{
    content: &apos;&apos;;
    width: 0;
    height: 0;
    border-right: 100px solid transparent;
    border-bottom: 70px solid darkkhaki;
    border-left: 100px solid transparent;
    position: absolute;
    color: red;
    top: 10px;
    left: -115px;
    -webkit-transform: rotate(-70deg);
    -moz-transform: rotate(-70deg);
    -ms-transform: rotate(-70deg);
    -o-transform: rotate(-70deg);
}
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/star.png" alt="star">    </p>
<h3 id="6-心形"><a href="#6-心形" class="headerlink" title="6.心形"></a>6.心形</h3><pre><code>.heart{
    width: 100px;
    height: 90px;
}
.heart:before,
.heart:after {
    position: absolute;
    content: &apos;&apos;;
    width: 50px;
    height: 80px;
    background: darksalmon;
    border-radius: 50px 50px 0 0;
    left: 50px;
    -webkit-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    transform: rotate(-45deg);
    -webkit-transform-origin: 0 100%;
    -moz-transform-origin: 0 100%;
    -ms-transform-origin: 0 100%;
    -o-transform-origin: 0 100%;
    transform-origin : 0 100%;
}
.heart:after{
    left: 0;
    -webkit-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    transform: rotate(45deg);
    -webkit-transform-origin: 100% 100%;
    -moz-transform-origin: 100% 100%;
    -ms-transform-origin: 100% 100%;
    -o-transform-origin: 100% 100%;
    transform-origin :100% 100%;
}
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/heart.png" alt="heart">    </p>
<h3 id="7-十字架"><a href="#7-十字架" class="headerlink" title="7.十字架"></a>7.十字架</h3><pre><code>.cross{
    height: 100px;
    width: 20px;
    background: mediumseagreen;
    margin-left: 50px;
    position: relative;
}
.cross:after{
    background: mediumseagreen;
    content: &apos;&apos;;
    height: 20px;
    position: absolute;
    width: 80px;
    top: 30px;
    left: -30px;
}
</code></pre><p><img src="http://otf35fo4u.bkt.clouddn.com/cross.png" alt="cross"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-三角形&quot;&gt;&lt;a href=&quot;#1-三角形&quot; class=&quot;headerlink&quot; title=&quot;1. 三角形&quot;&gt;&lt;/a&gt;1. 三角形&lt;/h3&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Yilia主题优化</title>
    <link href="http://yoursite.com/2017/07/15/Yilia%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2017/07/15/Yilia主题优化/</id>
    <published>2017-07-15T09:56:56.000Z</published>
    <updated>2017-07-21T10:01:56.533Z</updated>
    
    <content type="html"><![CDATA[<p>过了大半年，该是要好好整理下自己的博客了。</p>
<a id="more"></a>
<h1 id="github-hexo"><a href="#github-hexo" class="headerlink" title="github+hexo"></a>github+hexo</h1><h4 id="新建文章："><a href="#新建文章：" class="headerlink" title="新建文章："></a>新建文章：</h4><pre><code>$ hexo new &quot;新的文章&quot;
</code></pre><p>然后你就发现blog根目录下的source文件夹中的_post文件夹中多了一个 <strong>新的文章.md</strong> 文件</p>
<h4 id="本地服务预览："><a href="#本地服务预览：" class="headerlink" title="本地服务预览："></a>本地服务预览：</h4><pre><code>$ hexo s  //server  （会监视文件变动并自动更新）
</code></pre><p>觉得自己的文章没问题后，就通过<code>hexo g</code> , <code>hexo d</code>生成和部署网页</p>
<h4 id="清除缓存："><a href="#清除缓存：" class="headerlink" title="清除缓存："></a>清除缓存：</h4><pre><code>$ hexo clean
</code></pre><h4 id="生成："><a href="#生成：" class="headerlink" title="生成："></a>生成：</h4><pre><code>$ hexo g  //generate
</code></pre><h4 id="部署："><a href="#部署：" class="headerlink" title="部署："></a>部署：</h4><pre><code>$ hexo d  //deploy
</code></pre><p>上面两部可以合起来</p>
<pre><code>$ hexo d -g
</code></pre><p><strong><a href="https://hexo.io/themes/" target="_blank" rel="external">hexo所有主题传送门</a></strong></p>
<p><strong><a href="https://maxiang.io/" target="_blank" rel="external">markdown语法</a></strong></p>
<p><strong><a href="http://www.markdownpad.com/" target="_blank" rel="external">markdownPad下载</a></strong></p>
<p>推荐几个我觉得不错的主题：</p>
<ul>
<li><a href="http://ochukai.me/" target="_blank" rel="external">Ochuuunn</a> /  <a href="https://github.com/ochukai/hexo-theme-ochuunn" target="_blank" rel="external">github下载</a></li>
<li><a href="http://hexo-theme-random.herokuapp.com/" target="_blank" rel="external">Random</a> / <a href="https://github.com/stiekel/hexo-theme-random" target="_blank" rel="external">github下载</a></li>
</ul>
<h4 id="1-安装主题"><a href="#1-安装主题" class="headerlink" title="1.安装主题"></a>1.安装主题</h4><pre><code>$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia
</code></pre><h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h4><p>修改hexo根目录下的<code>_config.yml</code> ： <code>theme : yilia</code></p>
<h4 id="3-更新"><a href="#3-更新" class="headerlink" title="3.更新"></a>3.更新</h4><pre><code>$ cd themes/yilia
$ git pull
</code></pre><h3 id="上面是老东西，下面是优化"><a href="#上面是老东西，下面是优化" class="headerlink" title="上面是老东西，下面是优化"></a>上面是老东西，下面是优化</h3><h1 id="添加文章目录"><a href="#添加文章目录" class="headerlink" title="添加文章目录"></a>添加文章目录</h1><h3 id="1-添加css样式"><a href="#1-添加css样式" class="headerlink" title="1.添加css样式"></a>1.添加css样式</h3><p>打开<code>themes\yilia\source</code>下的 <code>main.2d7529.css</code>文件(这里好像名字会不一样，没关系，找到.css文件就ok了)，在里面添加代码：</p>
<pre><code>/* 新添加的 */
#container .show-toc-btn,#container .toc-article{display:block}
.toc-article{z-index:100;background:#fff;border:1px solid #ccc;max-width:250px;min-width:150px;max-height:500px;overflow-y:auto;-webkit-box-shadow:5px 5px 2px #ccc;box-shadow:5px 5px 2px #ccc;font-size:12px;padding:10px;position:fixed;right:35px;top:129px}.toc-article .toc-close{font-weight:700;font-size:20px;cursor:pointer;float:right;color:#ccc}.toc-article .toc-close:hover{color:#000}.toc-article .toc{font-size:12px;padding:0;line-height:20px}.toc-article .toc .toc-number{color:#333}.toc-article .toc .toc-text:hover{text-decoration:underline;color:#2a6496}.toc-article li{list-style-type:none}.toc-article .toc-level-1{margin:4px 0}.toc-article .toc-child{}@-moz-keyframes cd-bounce-1{0%{opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}60%{opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)}100%{-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}@-webkit-keyframes cd-bounce-1{0%{opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}60%{opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)}100%{-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}@-o-keyframes cd-bounce-1{0%{opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}60%{opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)}100%{-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}@keyframes cd-bounce-1{0%{opacity:0;-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}60%{opacity:1;-o-transform:scale(1.01);-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01)}100%{-o-transform:scale(1);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.show-toc-btn{display:none;z-index:10;width:30px;min-height:14px;overflow:hidden;padding:4px 6px 8px 5px;border:1px solid #ddd;border-right:none;position:fixed;right:40px;text-align:center;background-color:#f9f9f9}.show-toc-btn .btn-bg{margin-top:2px;display:block;width:16px;height:14px;background:url(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;-webkit-background-size:100%;-moz-background-size:100%;background-size:100%}.show-toc-btn .btn-text{color:#999;font-size:12px}.show-toc-btn:hover{cursor:pointer}.show-toc-btn:hover .btn-bg{background-position:0 -16px}.show-toc-btn:hover .btn-text{font-size:12px;color:#ea8010}
.toc-article li ol, .toc-article li ul { margin-left: 30px; } .toc-article ol, .toc-article ul { 
margin: 10px 0; }
</code></pre><h3 id="2-修改article-ejs文件"><a href="#2-修改article-ejs文件" class="headerlink" title="2.修改article.ejs文件"></a>2.修改article.ejs文件</h3><p>打开<code>themes\yilia\layout\_partial</code>文件夹下的<code>article.ejs</code>文件，在<code>&lt;/header&gt; &lt;% } %</code> 下面加入如下内容(注意插入的位置):</p>
<pre><code>&lt;!-- 目录内容 --&gt;
&lt;% if (!index &amp;&amp; post.toc){ %&gt;
&lt;p class=&quot;show-toc-btn&quot; id=&quot;show-toc-btn&quot; onclick=&quot;showToc();&quot; style=&quot;display:none&quot;&gt;
  &lt;span class=&quot;btn-bg&quot;&gt;&lt;/span&gt;
  &lt;span class=&quot;btn-text&quot;&gt;文章导航&lt;/span&gt;
&lt;/p&gt;
&lt;div id=&quot;toc-article&quot; class=&quot;toc-article&quot;&gt;
  &lt;span id=&quot;toc-close&quot; class=&quot;toc-close&quot; title=&quot;隐藏导航&quot; onclick=&quot;showBtn();&quot;&gt;×&lt;/span&gt;
  &lt;strong class=&quot;toc-title&quot;&gt;文章目录&lt;/strong&gt;
  &lt;%- toc(post.content) %&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
  function showToc(){
    var toc_article = document.getElementById(&quot;toc-article&quot;);
    var show_toc_btn = document.getElementById(&quot;show-toc-btn&quot;);
    toc_article.setAttribute(&quot;style&quot;,&quot;display:block&quot;);
    show_toc_btn.setAttribute(&quot;style&quot;,&quot;display:none&quot;);
  };
  function showBtn(){
    var toc_article = document.getElementById(&quot;toc-article&quot;);
    var show_toc_btn = document.getElementById(&quot;show-toc-btn&quot;);
    toc_article.setAttribute(&quot;style&quot;,&quot;display:none&quot;);
    show_toc_btn.setAttribute(&quot;style&quot;,&quot;display:block&quot;);
  };
&lt;/script&gt;
&lt;% } %&gt;
&lt;!-- 目录内容结束 --&gt;
</code></pre><p><strong>如果想要文章显示目录，要在每篇文章的开头加入：<code>toc: true</code></strong></p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/catalogue.PNG" alt="目录效果图"></p>
<h1 id="添加其他一些东西"><a href="#添加其他一些东西" class="headerlink" title="添加其他一些东西"></a>添加其他一些东西</h1><h3 id="1-添加“关于”"><a href="#1-添加“关于”" class="headerlink" title="1.添加“关于”"></a>1.添加“关于”</h3><pre><code>$ hexo new page &quot;about&quot;
</code></pre><p>此时，<code>source</code>中就会多出一个文件夹，名为<code>about</code>,可以在里面编辑内容</p>
<p>在<code>themes/yilia/_config.yml</code>添加下面内容：</p>
<pre><code>menu:
    关于: /about
</code></pre><h3 id="2-添加RSS"><a href="#2-添加RSS" class="headerlink" title="2.添加RSS"></a>2.添加RSS</h3><pre><code>$ npm install hexo-generator-feed --save
</code></pre><p>注意完整的输入上面的代码，<code>--save</code>不能省，否则插件信息不能写入package.json，之后<code>hexo clean</code> 、<code>hexo g</code>,查看public文件夹，里面多了一个atom.xml文件夹表示成功。</p>
<h3 id="3-添加sitemap"><a href="#3-添加sitemap" class="headerlink" title="3.添加sitemap"></a>3.添加sitemap</h3><pre><code>$ npm install hexo-generator-sitemap --save
</code></pre><p><code>hexo clean</code> 、<code>hexo g</code>,查看public文件夹，可以看到sitemap.xml文件。</p>
<p>sitemap的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到google和百度等搜索引擎提交sitemap.xml。</p>
<h3 id="4-添加本站访问次数"><a href="#4-添加本站访问次数" class="headerlink" title="4.添加本站访问次数"></a>4.添加本站访问次数</h3><p>在<code>themes/yilia/layout/_partial</code> 下找到footer.ejs , 在里面加入以下代码：</p>
<pre><code>&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;

&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;
    本文总阅读量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次
&lt;/span&gt;
</code></pre><h1 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h1><p>打开hexo/scaffolds/post.md , 可以看到：</p>
<pre><code>---
title: {{ title }}
date: {{ date }}
tags:
---
</code></pre><p>做以下的修改，每次自动生成目录：</p>
<pre><code>---
title: {{ title }}
date: {{ date }}
tags:
toc: true
---
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;过了大半年，该是要好好整理下自己的博客了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo+github" scheme="http://yoursite.com/tags/hexo-github/"/>
    
  </entry>
  
  <entry>
    <title>JS几道小题</title>
    <link href="http://yoursite.com/2017/07/07/js%E5%87%A0%E9%81%93%E5%B0%8F%E9%A2%98/"/>
    <id>http://yoursite.com/2017/07/07/js几道小题/</id>
    <published>2017-07-07T12:16:39.462Z</published>
    <updated>2017-07-15T09:53:03.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2017-7-6日厦门实训js作业"><a href="#2017-7-6日厦门实训js作业" class="headerlink" title="2017.7.6日厦门实训js作业"></a>2017.7.6日厦门实训js作业</h2><h4 id="例题1：定义两个整数变量，交换两个变量的值"><a href="#例题1：定义两个整数变量，交换两个变量的值" class="headerlink" title="例题1：定义两个整数变量，交换两个变量的值"></a>例题1：定义两个整数变量，交换两个变量的值</h4><a id="more"></a>
<pre><code>&lt;script&gt;
    var a = prompt(&quot;请输入a的值&quot;);
    var b = prompt(&quot;请输入b的值&quot;);
    var t;

    t = a;   //t=2
    a = b;  //a=3
    b = t;  //b=2
    alert(&quot;交换后a的值：&quot; + a + &quot;,交换后b的值：&quot; + b);
&lt;/script&gt;
</code></pre><h4 id="例题２：定义三个整数变量，输出一次最大值"><a href="#例题２：定义三个整数变量，输出一次最大值" class="headerlink" title="例题２：定义三个整数变量，输出一次最大值"></a>例题２：定义三个整数变量，输出一次最大值</h4><pre><code>&lt;script type=&quot;text/javascript&quot;&gt;
    var a = prompt(&quot;输入第一个数&quot;);
    var b = prompt(&quot;输入第二个数&quot;);
    var c = prompt(&quot;输入第三个数&quot;);
    var max;

    if(a&gt;=b){
        max = a;
    } else {
        max = b;
    }
    if(max&lt;c){
        max = c;
    }
    alert(&quot;最大的值是：&quot; + max);
&lt;/script&gt;
</code></pre><h4 id="例题3：输入三个数从小到大的输出"><a href="#例题3：输入三个数从小到大的输出" class="headerlink" title="例题3：输入三个数从小到大的输出"></a>例题3：输入三个数从小到大的输出</h4><pre><code>&lt;script&gt;
    var a = prompt(&quot;输入第一个数&quot;);
    var b = prompt(&quot;输入第二个数&quot;);
    var c = prompt(&quot;输入第三个数&quot;);
    var min,max,mid;

    if(a&gt;=b){
        if(b&gt;=c){
            max = a;mid = b;min = c;
        } else{
            max = a;mid = c;min = b;
        }
    } else{     //a&lt;b
        if(b&gt;=c){
            max = b;mid = a;min = c;
        } else{
            max = b;mid = c;min = a;
        }
    }
    if(max&lt;c){
        if(a&gt;=b){
            max = c;mid = a;min = b;
        } else{
            max = c;mid = b;min = a;
        }
    }
    alert(&quot;从小到大排序：&quot; + min + &quot;&lt;&quot; + mid +  &quot;&lt;&quot; + max);
&lt;/script&gt;
</code></pre><p>额….这个写的不是很好，傻瓜式…以后再说</p>
<h4 id="例题4：定义整数的成绩变量，按区间输出等级"><a href="#例题4：定义整数的成绩变量，按区间输出等级" class="headerlink" title="例题4：定义整数的成绩变量，按区间输出等级:"></a>例题4：定义整数的成绩变量，按区间输出等级:</h4><pre><code>&lt;script&gt;
    var score = prompt(&quot;输入成绩：&quot;);
    var sco = parseInt(score / 10);
    switch(sco){
        case 0 :
            alert(&quot;不及格！&quot;); break;
        case 1 :
            alert(&quot;不及格！&quot;); break;
        case 2 :
            alert(&quot;不及格！&quot;); break;
        case 3 :
            alert(&quot;不及格！&quot;); break;
        case 4 :
            alert(&quot;不及格！&quot;); break;
        case 5 :
            alert(&quot;不及格！&quot;); break;
        case 6:
            alert(&quot;D&quot;); break;
        case 7:
            alert(&quot;C&quot;); break;
        case 8:
            alert(&quot;B&quot;); break;
        case 9:
            alert(&quot;A&quot;); break;
        case 10:
            alert(&quot;A&quot;); break;
        default:
            alert(&quot;输入有误！&quot;); break;
    }
&lt;/script&gt;
</code></pre><h4 id="例题5：定义一个变量表示年份，判断是否是闰年"><a href="#例题5：定义一个变量表示年份，判断是否是闰年" class="headerlink" title="例题5：定义一个变量表示年份，判断是否是闰年"></a>例题5：定义一个变量表示年份，判断是否是闰年</h4><pre><code>&lt;script&gt;
    &lt;!--闰年的条件是:能被4整除,但是不能被100整除,或者能被四百整除--&gt;
        var year = prompt(&quot;输入一个年份：&quot;);

        if((year%4==0) &amp;&amp; (year%100!==0) || (year%400==0)) {
      alert(year+&quot;年是闰年&quot;);
        } else {
      alert(year+&quot;年是平年&quot;);
     }
&lt;/script&gt;
</code></pre><h4 id="例题6：输出100以内的质数"><a href="#例题6：输出100以内的质数" class="headerlink" title="例题6：输出100以内的质数"></a>例题6：输出100以内的质数</h4><pre><code>&lt;script&gt;
    //2,3,5,7,11,13,17,19,23...
    //只能被1和自己本身除
    for(var n=2;n&lt;=100;n++){
        for(var m=2;m&lt;n;m++){
            if(n%m == 0){
                break;   //跳出当前循环
            }
        }
        if(m&gt;=n){
            document.write( n + &quot;,&quot;);
        }
    }
 &lt;/script&gt;
</code></pre><h2 id="2017-7-7日厦门实训js作业-–循环语句"><a href="#2017-7-7日厦门实训js作业-–循环语句" class="headerlink" title="2017.7.7日厦门实训js作业 –循环语句"></a>2017.7.7日厦门实训js作业 –循环语句</h2><h4 id="例题1：输出乘法口诀表"><a href="#例题1：输出乘法口诀表" class="headerlink" title="例题1：输出乘法口诀表"></a>例题1：输出乘法口诀表</h4><pre><code>&lt;script&gt;
    var num;
    for(var i=1;i&lt;10;i++){
        for(var j=1;j&lt;10;j++){
            if(j&gt;i){
                break;
            } else {
                num = i*j;
                document.write(j + &quot;*&quot; + i + &quot;=&quot; + num + &quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;);
            }
        }
        document.write(&quot;&lt;br/&gt;&quot;);
    }
&lt;/script&gt;
</code></pre><h4 id="例题2：输出10行10列表格"><a href="#例题2：输出10行10列表格" class="headerlink" title="例题2：输出10行10列表格"></a>例题2：输出10行10列表格</h4><pre><code>&lt;button id=&quot;btn&quot;&gt;1.点击出现表格&lt;/button&gt;
&lt;table id=&quot;table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;10&quot; border=&quot;1&quot;&gt;&lt;/table&gt;

&lt;script&gt;
window.onload = function() {
    var btn = document.getElementById(&quot;btn&quot;);
    btn.onclick = out;
    function out(){
        var table = document.getElementById(&quot;table&quot;);
        for(var j=1;j&lt;=10;j++){
            var tr = document.createElement(&quot;tr&quot;);
            for(var i=1;i&lt;=10;i++){
                var td = document.createElement(&quot;td&quot;);   //创建元素节点eleNode
                td.innerHTML = i;
                tr.appendChild(td);   //将元素节点td添加到tr中
             }
         table.appendChild(tr);
        }
     }
&lt;/script&gt;
</code></pre><p><strong><em>自己在作业的基础上拓展了一下：获取任意行列的表格并输出</em></strong></p>
<pre><code>请输入行数：&lt;input id=&quot;rows&quot; /&gt;&lt;br/&gt;&lt;br/&gt;
请输入列数：&lt;input id=&quot;cols&quot; /&gt;&lt;br/&gt;&lt;br/&gt;
&lt;button id=&quot;btn1&quot;&gt;2.点击出现你输入的表格&lt;/button&gt;&lt;br&gt;&lt;br/&gt;
&lt;table id=&quot;table1&quot; cellspacing=&quot;0&quot; cellpadding=&quot;10&quot; border=&quot;1&quot;&gt;&lt;/table&gt;

&lt;script&gt;
    var btn1 = document.getElementById(&quot;btn1&quot;);
        btn1.onclick = out1;
        function out1(){
            var table1 = document.getElementById(&quot;table1&quot;);
            var rows = document.getElementById(&quot;rows&quot;).value;
            var cols = document.getElementById(&quot;cols&quot;).value;

            for(var j=1;j&lt;=cols;j++){
                var tr1 = document.createElement(&quot;tr&quot;);
                for(var i=1;i&lt;=rows;i++){
                    var td1 = document.createElement(&quot;td&quot;);
                    td1.innerHTML = i;
                    tr1.appendChild(td1);
                }
                table1.appendChild(tr1);
            }
        }
&lt;/script&gt;
</code></pre><h4 id="例题3：在上例表格中改变奇数行的背景"><a href="#例题3：在上例表格中改变奇数行的背景" class="headerlink" title="例题3：在上例表格中改变奇数行的背景"></a>例题3：在上例表格中改变奇数行的背景</h4><pre><code>&lt;button id=&quot;btn&quot;&gt;点击后奇数行有背景颜色&lt;/button&gt;
&lt;table id=&quot;table&quot; border=&quot;1&quot; cellpadding=&quot;10px&quot; cellspacing=&quot;0&quot;&gt;&lt;/table&gt;

&lt;script&gt;
    window.onload = function () {
        var btn = document.getElementById(&quot;btn&quot;);
        btn.onclick = out2;
        function out2() {
            var table = document.getElementById(&quot;table&quot;);
            for (var j = 1; j &lt;= 10; j++) {
                var tr = document.createElement(&quot;tr&quot;);
                if (j%2 != 0) {    //判断是否为奇数行
                    tr.style.backgroundColor = &quot;red&quot;;
                }
                for (var i = 1; i &lt;= 10; i++) {
                    var td = document.createElement(&quot;td&quot;);
                    td.innerHTML = i;
                    tr.appendChild(td);
                }
                table.appendChild(tr);
            }
        }
    }
&lt;/script&gt;
</code></pre><h4 id="例题4：输出序列1-1-2-3-5-8-13……-N个数"><a href="#例题4：输出序列1-1-2-3-5-8-13……-N个数" class="headerlink" title="例题4：输出序列1,1,2,3,5,8,13…… N个数"></a>例题4：输出序列1,1,2,3,5,8,13…… N个数</h4><pre><code>&lt;script&gt;
    var a=1;b=1;
    if(a=1){
        document.write(a + &quot; &quot;);
    }
    if(b=1){
        document.write(b + &quot; &quot;);
    }
   for(var n=0;n&lt;500;n++){
        n = a + b; //1+1=2 ;n=2 n=3 n=5
        a = b;    //a=1; a=1; a=2; a=3;
        b = n; //b=1 b=2; b=3; b=5;
       document.write(n + &quot; &quot;);
    }
&lt;/script&gt;
</code></pre><p>此段代码不够完善…待完善</p>
<h2 id="2017-7-10日厦门实训js作业"><a href="#2017-7-10日厦门实训js作业" class="headerlink" title="2017.7.10日厦门实训js作业"></a>2017.7.10日厦门实训js作业</h2><h4 id="例题1：动态的显示当前时间"><a href="#例题1：动态的显示当前时间" class="headerlink" title="例题1：动态的显示当前时间"></a>例题1：动态的显示当前时间</h4><pre><code>function startTime(){
    var today = new Date();
    var year = today.getFullYear();
    var month = today.getMonth() + 1;
    var day = today.getDate();
    var h = today.getHours();
    var m = today.getMinutes();
    var s = today.getSeconds();
    m = checkTime(m);
    s = checkTime(s);

    document.getElementById(&quot;time&quot;).innerHTML =&quot;现在是北京时间：&quot; + year + &quot;年&quot; + month + &quot;月&quot; + day + &quot;日&quot; + &quot; &quot; + h + &quot;:&quot; + m + &quot;:&quot; + s ;

    t = setTimeout(function(){startTime()},500);
}
function checkTime(i){
    if(i&lt;10){
         i = &quot;0&quot; + i;
     }
    return i;
     }

&lt;body onload=&quot;startTime()&quot;&gt;
    &lt;div id=&quot;time&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre><h4 id="例题2：计算器实现加减乘除（最简单的）"><a href="#例题2：计算器实现加减乘除（最简单的）" class="headerlink" title="例题2：计算器实现加减乘除（最简单的）"></a>例题2：计算器实现加减乘除（最简单的）</h4><pre><code>数字1：&lt;input id=&quot;num1&quot;&gt;&lt;br/&gt;&lt;br/&gt;
数字2：&lt;input id=&quot;num2&quot;&gt;&lt;br/&gt;&lt;br/&gt;
&lt;button onclick=&quot;add()&quot;&gt;加法&lt;/button&gt;
&lt;button onclick=&quot;del()&quot;&gt;减法&lt;/button&gt;
&lt;button onclick=&quot;mul()&quot;&gt;乘法&lt;/button&gt;
&lt;button onclick=&quot;division()&quot;&gt;除法&lt;/button&gt;&lt;br/&gt;&lt;br/&gt;
结果为：&lt;input id=&quot;result&quot; value=&quot;&quot;&gt;

&lt;script&gt;
function add() {
    var num1 = document.getElementById(&quot;num1&quot;).value;
    var num2 = document.getElementById(&quot;num2&quot;).value;
    var result = parseFloat(num1) + parseFloat(num2);
    document.getElementById(&quot;result&quot;).value = result;
}
function del() {
    var num1 = document.getElementById(&quot;num1&quot;).value;
    var num2 = document.getElementById(&quot;num2&quot;).value;
    var result = parseFloat(num1) - parseFloat(num2);
    document.getElementById(&quot;result&quot;).value = result;
}
function mul() {
    var num1 = document.getElementById(&quot;num1&quot;).value;
    var num2 = document.getElementById(&quot;num2&quot;).value;
    var result = num1 * num2;
    document.getElementById(&quot;result&quot;).value = result;
}
function division() {
    var num1 = document.getElementById(&quot;num1&quot;).value;
    var num2 = document.getElementById(&quot;num2&quot;).value;
    var result = num1 / num2;
    document.getElementById(&quot;result&quot;).value = result;
}
&lt;/script&gt;
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2017-7-6日厦门实训js作业&quot;&gt;&lt;a href=&quot;#2017-7-6日厦门实训js作业&quot; class=&quot;headerlink&quot; title=&quot;2017.7.6日厦门实训js作业&quot;&gt;&lt;/a&gt;2017.7.6日厦门实训js作业&lt;/h2&gt;&lt;h4 id=&quot;例题1：定义两个整数变量，交换两个变量的值&quot;&gt;&lt;a href=&quot;#例题1：定义两个整数变量，交换两个变量的值&quot; class=&quot;headerlink&quot; title=&quot;例题1：定义两个整数变量，交换两个变量的值&quot;&gt;&lt;/a&gt;例题1：定义两个整数变量，交换两个变量的值&lt;/h4&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>软件测试初学</title>
    <link href="http://yoursite.com/2017/05/24/Software%20Test/"/>
    <id>http://yoursite.com/2017/05/24/Software Test/</id>
    <published>2017-05-23T16:00:00.000Z</published>
    <updated>2017-07-20T03:48:09.281Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件缺陷常见问题"><a href="#软件缺陷常见问题" class="headerlink" title="软件缺陷常见问题"></a>软件缺陷常见问题</h2><a id="more"></a>
<h5 id="统一性"><a href="#统一性" class="headerlink" title="统一性"></a>统一性</h5><p>中英文问题</p>
<h5 id="容错性"><a href="#容错性" class="headerlink" title="容错性"></a>容错性</h5><h5 id="互动性"><a href="#互动性" class="headerlink" title="互动性"></a>互动性</h5><ul>
<li>用户输入信息有误时，按“确定”后，所有信息被清空(这种情况要避免)</li>
<li>对于所有的删除信息在删除之前都要给出是否删除确认的提示或者放弃的提示。</li>
<li>危险操作之前，提醒</li>
<li>改变数据状态，提醒</li>
<li>如填写资料有错误的时候，应该能够提示错误的位置，让用户知道到底是哪些地方输入的不正确</li>
</ul>
<h5 id="用户体验"><a href="#用户体验" class="headerlink" title="用户体验"></a>用户体验</h5><p>使用的提示信息要通俗易懂</p>
<h5 id="兼容性："><a href="#兼容性：" class="headerlink" title="兼容性："></a>兼容性：</h5><ul>
<li>操作系统版本</li>
<li>屏幕分辨率</li>
<li>网络类型(wifi,3G,4G)</li>
</ul>
<h5 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h5><p>对于要求用户大量录入信息的页面，要支持Tab键的输入，Tab键的走向要一般要遵循从做左到右，从上到下的的原则</p>
<h5 id="安全性："><a href="#安全性：" class="headerlink" title="安全性："></a>安全性：</h5><ul>
<li>登录网站进入其内部网页后，直接拷贝网址，然后粘贴到另一IE 窗口输入，在其他机器上看是否可以绕过登录直接访问</li>
<li>对于需要登录的系统，在用户不操作的一定时间内，出于安全性考虑，最好要让用户重新登录才能重新使用该系统</li>
<li>有些文件在ini等配置文件中写出了管理员口令密码等信息，而且是明文的!这是一个安全隐患</li>
</ul>
<p>！！！所有软件测试都是建立在业务之上的</p>
<h2 id="等价类"><a href="#等价类" class="headerlink" title="等价类"></a>等价类</h2><p>概念：是指把程序的输入域根据等价类原则划分成若干部分，然后从每个部分中选取少数具有代表性的数据作为测试输入数据的一种方法。</p>
<ol>
<li>有效等价类</li>
<li>无效等价类</li>
</ol>
<h2 id="Junit单元测试"><a href="#Junit单元测试" class="headerlink" title="Junit单元测试"></a>Junit单元测试</h2><p>测试用例不是用来证明你是对的，而是用来证明你没错。</p>
<h5 id="入门："><a href="#入门：" class="headerlink" title="入门："></a>入门：</h5><p>1.新建一个类：</p>
<p>File → Java Project : name (JUnit_Test) → 在src下new Package : name (JunitTest) → new class : name (Calculator) → 敲代码：</p>
<pre><code>package JunitTest;
public class Calculator {    
public int add(int a,int b){
    return a+b;
}
public int subtract(int a,int b){
    return a-b;
}
public int multiply(int a,int b){
    return a*b;
}
public int divide(int a,int b){
    return a/b;
}    
}
</code></pre><p>2.导入JUnit jar包：</p>
<p>JUnit_Test → Build Path → Add Libraries… → JUnit → Next&gt; → Finish</p>
<p>3.JunitTest → new : JUnit Test Case →输入测试工作区的名字 Name : (AddSubTest) , Class under test : name (Calculator) → Finish</p>
<p>4.运行测试用例：</p>
<p>右键 → Run AS → Junit Test → 结果显示，测试工作都运行通过</p>
<p><img src="http://ot4r4qnml.bkt.clouddn.com/1.PNG" alt=""></p>
<h4 id="第一个测试用例："><a href="#第一个测试用例：" class="headerlink" title="第一个测试用例："></a>第一个测试用例：</h4><p><img src="http://ot4r4qnml.bkt.clouddn.com/AddTest.PNG" alt=""><br><img src="http://ot4r4qnml.bkt.clouddn.com/AddTest2.PNG" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件缺陷常见问题&quot;&gt;&lt;a href=&quot;#软件缺陷常见问题&quot; class=&quot;headerlink&quot; title=&quot;软件缺陷常见问题&quot;&gt;&lt;/a&gt;软件缺陷常见问题&lt;/h2&gt;
    
    </summary>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>JS实现轮播图</title>
    <link href="http://yoursite.com/2017/01/31/Carousel-figure/"/>
    <id>http://yoursite.com/2017/01/31/Carousel-figure/</id>
    <published>2017-01-31T08:10:42.000Z</published>
    <updated>2017-07-15T09:22:20.139Z</updated>
    
    <content type="html"><![CDATA[<p>  这个轮播图是在2016年12月完成的，是我用js完成的第一个小东西。  </p>
<a id="more"></a>
<h3 id="html代码实现"><a href="#html代码实现" class="headerlink" title="html代码实现"></a>html代码实现</h3><pre><code>&lt;div id=&quot;content&quot;&gt;
    &lt;div id=&quot;images&quot; style=&quot;left: -600px;&quot;&gt; 
        &lt;img src=&quot;images/5.jpg&quot;&gt;
        &lt;img src=&quot;images/1.jpg&quot;&gt;
        &lt;img src=&quot;images/2.jpg&quot;&gt;
        &lt;img src=&quot;images/3.jpg&quot;&gt;
        &lt;img src=&quot;images/4.jpg&quot;&gt;
        &lt;img src=&quot;images/5.jpg&quot;&gt;
        &lt;img src=&quot;images/1.jpg&quot;&gt;
    &lt;/div&gt;
    &lt;div id=&quot;circle&quot;&gt;
        &lt;span class=&quot;on&quot; index=&quot;1&quot;&gt;&lt;/span&gt;
        &lt;span index=&quot;2&quot;&gt;&lt;/span&gt;
        &lt;span index=&quot;3&quot;&gt;&lt;/span&gt;
        &lt;span index=&quot;4&quot;&gt;&lt;/span&gt;
        &lt;span index=&quot;5&quot;&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;btn&quot; id=&quot;btn_l&quot;&gt;&amp;lt;&lt;/div&gt;
    &lt;div class=&quot;btn&quot; id=&quot;btn_r&quot;&gt;&amp;gt;&lt;/div&gt;
&lt;/div&gt;
</code></pre><h3 id="css部分代码实现"><a href="#css部分代码实现" class="headerlink" title="css部分代码实现"></a>css部分代码实现</h3><p> 1.”content” 处设置相对位置：<code>position:relative</code>; 图片展示为只显示一张图片，所以溢出content容器部分使用属性：<code>overflow:hidden</code>;</p>
<p> 2.左、右按钮部分代码：</p>
<pre><code>position: relative;  
cursor: pointer;  //鼠标移上去，显示手指妆
height: 50px;
width: 30px;
background: rgba(0,0,0,0.3);
top: 50%;
font-size: 40px;
text-align: center;
line-height: 50px;
display: none;  //当鼠标移上去时，btn出现
color: #fff;
</code></pre><h3 id="javascript部分代码实现"><a href="#javascript部分代码实现" class="headerlink" title="javascript部分代码实现"></a>javascript部分代码实现</h3><h5 id="1-点击-lt-gt-按钮让图片左右移动"><a href="#1-点击-lt-gt-按钮让图片左右移动" class="headerlink" title="1.点击&lt; &gt;按钮让图片左右移动"></a>1.点击&lt; &gt;按钮让图片左右移动</h5><pre><code>function animate(offset){
    var newLeft = parseInt(images.style.left) + offset;
    images.style.left = newLeft + &apos;px&apos;;
    if (newLeft&lt;-3000) {
        images.style.left = -600 + &apos;px&apos;;
    }
    if (newLeft&gt;-600) {
        images.style.left = -3000 + &apos;px&apos;;
    }
}

btn_l.onclick=function(){
    animate(600);    
}

btn_r.onclick=function(){
    animate(-600);
}
</code></pre><p>if循环语句是实现图片无限循环；</p>
<p>这时，轮播图可以实现左右点击，图片相应变化的功能。</p>
<h5 id="2-设置轮播图的定时器"><a href="#2-设置轮播图的定时器" class="headerlink" title="2.设置轮播图的定时器"></a>2.设置轮播图的定时器</h5><pre><code>var timer;
function play(){
    timer = setInterval(function() {
        btn_r.onclick()
    },3000)    //每3000ms图片自动移动
}
play();
</code></pre><p>使用setIntervel()设置定时器。</p>
<h5 id="3-清除轮播图的定时器"><a href="#3-清除轮播图的定时器" class="headerlink" title="3.清除轮播图的定时器"></a>3.清除轮播图的定时器</h5><pre><code>function stop() {
    clearInterval(timer);
}
content.onmouseover = stop;
content.onmouseout = play;
</code></pre><p>图片自动移动时，当把鼠标悬停在content内时，图片暂停移动。</p>
<h5 id="4-小圆点随图片变化相应变化"><a href="#4-小圆点随图片变化相应变化" class="headerlink" title="4.小圆点随图片变化相应变化"></a>4.小圆点随图片变化相应变化</h5><pre><code>function showCircle(){
    for (var i=0;i&lt;circle.length;i++){
        if(circle[i].className==&apos;on&apos;){
            circle[i].className=&apos;&apos;;
        }
    }
    circle[index-1].className=&apos;on&apos;;
}
</code></pre><p>for循环用来清除之前circle的样式；</p>
<p>这时，点击&lt; &gt; 按钮小圆点会随图片相应点亮。</p>
<pre><code>for (var i=0;i&lt;circle.length;i++){
    circle[i].onclick=function(){
        var clickIndex=parseInt(this.getAttribute(&apos;index&apos;));
        var offset=600*(index-clickIndex);
        animate(offset);
        index=clickIndex;
        showCircle();       
    }
}
</code></pre><p>利用getAttribute(‘’)获取自定义index，之后</p>
<pre><code>btn_l.onclick=function(){
    index -= 1;
    if(index&lt;1){
        index=5;
    }
    showCircle();
    animate(600);    
}
btn_r.onclick=function(){
    index += 1;
    if(index&gt;5){
        index=1;
    }
    showCircle();
    animate(-600);
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  这个轮播图是在2016年12月完成的，是我用js完成的第一个小东西。  &lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>用github+hexo搭建博客</title>
    <link href="http://yoursite.com/2017/01/30/github-hexo/"/>
    <id>http://yoursite.com/2017/01/30/github-hexo/</id>
    <published>2017-01-30T14:42:04.000Z</published>
    <updated>2017-07-21T10:01:40.790Z</updated>
    
    <content type="html"><![CDATA[<p>  2016年月底第一次正式开始搭建博客，在学长和另一个小伙伴的帮助下，我初次认识github+hexo，被它给吸引。寒假开始后，就在准备换主题，因为我对原始主题实在无爱，强迫症越来越严重的我，不换好主题坚持不做笔记（无奈脸）。刚刚换好主题的我，觉得之前自己用了好几个晚上都没有换好主题的自己简直是傻bi（给自己一个黑人问号），不过好在自己现在换好了主题，赶紧做笔记，谨防自己忘了。</p>
<a id="more"></a>
<h2 id="清除，生成，部署"><a href="#清除，生成，部署" class="headerlink" title="清除，生成，部署"></a>清除，生成，部署</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean  or(hexo c)</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>谨记：每次更改了一些信息后都要用这三步进行部署</p>
<h2 id="安装yilia主题"><a href="#安装yilia主题" class="headerlink" title="安装yilia主题"></a>安装yilia主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</div></pre></td></tr></table></figure>
<p>安装好后，在_config.yml下修改theme：landscape为theme：yilia</p>
<h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><ol>
<li>找到blog ☞ sources ☞ _post ☞ 写博客</li>
<li>博客开头格式(以下为例子)：<br><code>title: xxx</code><br><code>data: xxxx-xx-xx</code><br><code>tags: xxxx</code></li>
<li><p>如果文章较长，如果全都在主页显示，就会很累赘，浏览也不是很方便，那么就可以在每篇文章中加入<code>&lt;!--more--&gt;</code> </p>
</li>
<li><p>文章写好直接执行下面命令即可直接发布文章<br><code>$ hexo d -g</code></p>
</li>
</ol>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>1.常用命令：</p>
<p>hexo new “post name” （新建文章）</p>
<p>hexo help （查看帮助）</p>
<p>hexo version （查看hexo的版本）</p>
<p>2.Markdown语法参考链接： <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">链接</a></p>
<p>● <a href="http://litten.me/2014/08/31/hexo-theme-yilia/" target="_blank" rel="external">Hexo主题Yilia</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  2016年月底第一次正式开始搭建博客，在学长和另一个小伙伴的帮助下，我初次认识github+hexo，被它给吸引。寒假开始后，就在准备换主题，因为我对原始主题实在无爱，强迫症越来越严重的我，不换好主题坚持不做笔记（无奈脸）。刚刚换好主题的我，觉得之前自己用了好几个晚上都没有换好主题的自己简直是傻bi（给自己一个黑人问号），不过好在自己现在换好了主题，赶紧做笔记，谨防自己忘了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo+github" scheme="http://yoursite.com/tags/hexo-github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/12/27/hello-world/"/>
    <id>http://yoursite.com/2016/12/27/hello-world/</id>
    <published>2016-12-27T10:23:59.706Z</published>
    <updated>2017-07-21T10:03:23.691Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo+github" scheme="http://yoursite.com/tags/hexo-github/"/>
    
  </entry>
  
</feed>
